{"version":3,"sources":["layout/Calculator/Calculator.js","layout/Calculator/Screen/ResultScreen/ResultScreen.js","layout/Calculator/Screen/ComputationScreen/ComputationScreen.js","layout/Calculator/Screen/Screen.js","layout/Calculator/Keypad/KeypadRow/KeypadRow.js","components/Button/Button.js","layout/Calculator/Keypad/Keypad.js","App.js","index.js"],"names":["Calculator","state","equation","result","onButtonPress","event","_this","pressedButton","target","innerHTML","clear","indexOf","evalResult","eval","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Screen_Screen__WEBPACK_IMPORTED_MODULE_6__","_Keypad_Keypad__WEBPACK_IMPORTED_MODULE_7__","React","Component","resultScreen","props","react_default","children","computationScreen","screen","ResultScreen","ComputationScreen","keypadRow","button","classes","type","push","join","onClick","keypad","KeypadRow","Button","app","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.7055f3b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Screen from './Screen/Screen';\r\nimport Keypad from './Keypad/Keypad';\r\nclass Calculator extends React.Component {\r\n  state = {\r\n    equation: '',\r\n    result: 0\r\n  }\r\n  onButtonPress = event => {\r\n    let equation = this.state.equation;\r\n    const pressedButton = event.target.innerHTML;\r\n    if (pressedButton === 'C') return this.clear();\r\n    else if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') equation += pressedButton;\r\n    else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';\r\n    else if (pressedButton === '=') {\r\n      try {\r\n        const evalResult = eval(equation);\r\n        const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\r\n        this.setState({result});\r\n      } catch (error) {\r\n        alert('Invalid Mathematical Equation');\r\n      }\r\n    }\r\n    else {\r\n      equation = equation.trim();\r\n      equation = equation.substr(0, equation.length - 1);\r\n    }\r\n                \r\n    this.setState({equation: equation});\r\n  }\r\n  clear() {\r\n    this.setState({equation: '', result: 0});\r\n  }\r\n  render() {\r\n    return (\r\n      <main className=\"calculator\">\r\n        <Screen equation={this.state.equation} result={this.state.result} />\r\n        <Keypad onButtonPress={this.onButtonPress} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\nexport default Calculator;\r\n","import React from 'react';\r\n\r\nconst resultScreen = (props) => (\r\n    <div className=\"result-screen\">\r\n    {props.children}\r\n    </div>\r\n);\r\n\r\nexport default resultScreen;\r\n","import React from 'react';\r\nconst computationScreen = (props) => (\r\n  <div className=\"computation-screen\">\r\n    {props.children}\r\n  </div>\r\n);\r\nexport default computationScreen;","import React from 'react';\r\nimport ResultScreen from './ResultScreen/ResultScreen';\r\nimport ComputationScreen from './ComputationScreen/ComputationScreen';\r\n\r\n\r\nconst screen = (props) => (\r\n  <section className=\"screen\">\r\n    <ResultScreen>{props.result}</ResultScreen>\r\n    <ComputationScreen>{props.equation}</ComputationScreen>\r\n  </section>\r\n);\r\nexport default screen;","import React from 'react';\r\n\r\nconst keypadRow = (props) => ( \r\n    <div className=\"keypad__row\">\r\n    {props.children}\r\n    </div>\r\n);\r\n\r\nexport default keypadRow;","import React from 'react';\r\nconst button = (props) => {\r\n  const classes = ['btn'];\r\nif (typeof props !== 'undefined' && typeof props.type !== 'undefined')\r\n    classes.push('btn--' + props.type);\r\nreturn (\r\n    <button className={classes.join(' ')} onClick={props.onButtonPress}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\nexport default button;","import React from 'react';\r\n\r\nimport KeypadRow from './KeypadRow/KeypadRow';\r\nimport Button from '../../../components/Button/Button';\r\n\r\n\r\nconst keypad = (props) => (\r\n  <section className=\"keypad\">\r\n    <KeypadRow>\r\n    <Button type=\"primary\" onButtonPress={props.onButtonPress}>C</Button>\r\n    <Button type=\"primary\"onButtonPress={props.onButtonPress}>&larr;</Button>\r\n    <Button type=\"operator\" onButtonPress={props.onButtonPress}>%</Button>\r\n    <Button type=\"operator\" onButtonPress={props.onButtonPress}>/</Button>\r\n    </KeypadRow>\r\n\r\n    <KeypadRow>\r\n    <Button onButtonPress={props.onButtonPress}>9</Button>\r\n    <Button onButtonPress={props.onButtonPress}>8</Button>\r\n    <Button onButtonPress={props.onButtonPress}>7</Button>\r\n    <Button type=\"operator\" onButtonPress={props.onButtonPress}>*</Button>\r\n    </KeypadRow>\r\n\r\n    <KeypadRow>\r\n    <Button onButtonPress={props.onButtonPress}>6</Button>\r\n    <Button onButtonPress={props.onButtonPress}>5</Button>\r\n    <Button onButtonPress={props.onButtonPress}>4</Button>\r\n    <Button type=\"operator\" onButtonPress={props.onButtonPress}>-</Button>\r\n    </KeypadRow>\r\n\r\n    <KeypadRow>\r\n    <Button onButtonPress={props.onButtonPress}>3</Button>\r\n    <Button onButtonPress={props.onButtonPress}>2</Button>\r\n    <Button onButtonPress={props.onButtonPress}>1</Button>\r\n    <Button type=\"operator\" onButtonPress={props.onButtonPress}>+</Button>\r\n    </KeypadRow>\r\n\r\n    <KeypadRow>\r\n    <Button onButtonPress={props.onButtonPress}>0</Button>\r\n    <Button onButtonPress={props.onButtonPress}>.</Button>\r\n    <Button type=\"large\" onButtonPress={props.onButtonPress}>=</Button>\r\n    \r\n    </KeypadRow>\r\n  </section>\r\n);\r\n\r\nexport default keypad;","import React from 'react';\r\n\r\nimport './Styles/Styles.css';\r\n\r\nimport Calculator from './layout/Calculator/Calculator';\r\n\r\nconst app = () => (\r\n  <div className=\"app\">\r\n    <Calculator />\r\n  </div>\r\n);\r\n\r\nexport default app;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}